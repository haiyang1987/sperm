%{

#include <string>
#include "common/logger_inl.h"
#include "nasty/nasty.h"
using namespace sperm::nasty;
#include "nasty/nasty.y.hh"  

#define SaveAtom(type) do {\
SPERM_DEBUG("got '%s'", yytext);\
yylval->atom_ = new(std::nothrow) Atom(type, yytext, yyleng, yylloc->first_line, yylloc->first_column);\
}while(0)

#define YY_DECL int yylex(YYSTYPE* yylval_param, YYLTYPE* yylloc_param, yyscan_t yyscanner, Parser* parser)

%}

%option 8bit
%option reentrant
%option bison-bridge
%option bison-locations
%option noyywrap
%option warn
%option nodefault
%option header-file="nasty.l.hh"
%option outfile="nasty.l.cc"
  
C [a-zA-Z_!@#$%^&*+-/<>:~]
D [0-9]
   
%%
"(" { SPERM_DEBUG("got '('"); return LBRACE; }
")" { SPERM_DEBUG("got ')'"); return RBRACE; }
\"(\\.|[^\\"])*\"	{ SaveAtom(Atom::SR); return SR; }
{C}({C}|{D})* { SaveAtom(Atom::ID); return ID; }
{D}+\.{D}* { SaveAtom(Atom::DBL); return DBL; }
{D}+  { SaveAtom(Atom::INT); return INT; }
[ \t\n] {}
. yyterminate();

%%
