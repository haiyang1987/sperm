#!/usr/bin/env bash
#Copyright (C) dirlt

# mac or ubuntu.
MAC=0
kernel=`uname -s`
if [ $kernel"X" = "DarwinX" ]
then
    MAC=1
fi

# basic path.
PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/sbin:$PATH
MANPATH=/usr/local/share/man:/usr/share/man:$MANPATH

# cdh related.
CDH3=0
CDH4_2_0=0
CDH4_3_0=1

if [ $MAC = 1 ]; then
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/
    export HADOOP_LZO=/Users/dirlt/repo/hadoop-lzo/
    export HADOOP_CLASSPATH=.:$HADOOP_LZO/build/hadoop-lzo-0.4.17-SNAPSHOT.jar
    export JAVA_LIBRARY_PATH=$HADOOP_LZO/build/native/Mac_OS_X-x86_64-64/lib/
else
    export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64/

    if [ $CDH3 = 1 ]; then
	export HADOOP_HOME=$HOME/utils/hadoop-0.20.2-cdh3u3/
	export HADOOP_CONF_DIR=$HADOOP_HOME/conf
	export HBASE_HOME=$HOME/utils/hbase-0.90.4-cdh3u3/
	export HBASE_CONF_DIR=$HBASE_HOME/conf
	export OOZIE_HOME=$HOME/utils/oozie-2.3.2-cdh3u3/
	export OOZIE_URL="http://localhost:11000/oozie" # default url
	export HIVE_HOME=$HOME/utils/hive-0.7.1-cdh3u3/
    fi

    if [ $CDH4_2_0 = 1 ]; then
	export HADOOP_HOME=$HOME/utils/hadoop-2.0.0-cdh4.2.0
	export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop/
	export HBASE_HOME=$HOME/utils/hbase-0.94.2-cdh4.2.0/
	export HBASE_CONF_DIR=$HBASE_HOME/conf
	export HIVE_HOME=$HOME/utils/hive-0.10.0-cdh4.2.0/
    fi

    if [ $CDH4_3_0 = 1 ]; then
	export HADOOP_HOME=$HOME/utils/hadoop-2.0.0-cdh4.3.0
	export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop/
	export HBASE_HOME=$HOME/utils/hbase-0.94.6-cdh4.3.0/
	export HBASE_CONF_DIR=$HBASE_HOME/conf
	export HIVE_HOME=$HOME/utils/hive-0.10.0-cdh4.3.0/
    fi

    export JAVA_LIBRARY_PATH=$HADOOP_HOME/lib/native/Linux-amd64-64:$HADOOP_HOME/lib/native
    export HADOOP_CLASSPATH=.:$HADOOP_HOME/lib/hadoop-lzo-0.4.15.jar

    PATH=$HADOOP_HOME/bin:$PATH
    PATH=$HADOOP_HOME/sbin:$PATH
    PATH=$HBASE_HOME/bin:$PATH
    PATH=$OOZIE_HOME/bin:$PATH
    PATH=$HIVE_HOME/bin:$PATH

fi

# jdk and jvm.
export CLASSPATH=.:./target/classes:./target/dependency:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$HADOOP_CLASSPATH:$CLASSPATH
export LD_LIBRARY_PATH=.:$JAVA_LIBRARY_PATH:$LD_LIBRARY_PATH
PATH=$JAVA_HOME/bin:$PATH

# texmacs.
PATH=$HOME/utils/TeXmacs-1.0.7-static-gnu-linux/bin:$PATH

# maven.
PATH=$HOME/utils/apache-maven-3.0.4/bin:$PATH
PATH=$HOME/utils/apache-maven-3.2.1/bin:$PATH

# protocol buffers.
PATH=$HOME/utils/protobuf-2.3.0/build/bin:$PATH
PATH=$HOME/utils/protobuf-2.5.0/build/bin:$PATH
PATH=$HOME/utils/protobuf-2.4.1/build/bin:$PATH

# golang
export GOROOT=$HOME/utils/go
export GOPATH=$HOME/go/
PATH=$GOROOT/bin:$PATH

golang_doc_server() {
    godoc -http=:6060
}

# scala.
export SCALA_HOME=$HOME/utils/scala-2.10.2
PATH=$SCALA_HOME/bin:$PATH

# sbt
export SBT_HOME=$HOME/utils/sbt
PATH=$SBT_HOME/bin:$PATH
export SBT_OPTS="-Dsbt.global.base=$HOME/.sbt -Dsbt.ivy.home=$HOME/.ivy2"

# ccache
PATH=/usr/lib/ccache:$PATH

# export path and manpath.
PATH=$HOME/utils/bin:$PATH
export PATH
export MANPATH

# other settings.
export EDITOR=vim

# git related.
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --"
git config --global color.ui true
git config --global core.autocrlf false
git config --global user.name "dirtysalt"
git config --global user.email "dirtysalt1987@gmail.com"
git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.unstage 'reset'
git config --global alias.last 'log -1 HEAD'

# private key.
ssh-add ~/.ssh/id_rsa 2>/dev/null
ssh-add ~/.ssh/github 2>/dev/null

# language.
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
# export LANG="zh_CN.UTF-8"
# export LC_ALL="zh_CN.UTF-8"

# galera
# export MYSQL_SRC=$HOME/repo/wsrep-5.6
export MYSQL_SRC=$HOME/repo/wsrep-5.5
export MYSQL_DIR=$MYSQL_SRC/build_release

start_node0() {
    MYSQL_PORT=3305 /dev/shm/galera0/mysql-galera -g 'gcomm://127.0.0.1:4564?pc.wait_prim=false&gmcast.listen_addr=tcp://0.0.0.0:4566' --mysql-opt --wsrep-new-cluster start
}
start_node1() {
    MYSQL_PORT=3304 /dev/shm/galera1/mysql-galera -g 'gcomm://127.0.0.1:4566?pc.wait_prim=false&gmcast.listen_addr=tcp://0.0.0.0:4564' start 
}
start_node2() {
    MYSQL_PORT=3303 /dev/shm/galera2/mysql-galera -g 'gcomm://127.0.0.1:4566?pc.wait_prim=false&gmcast.listen_addr=tcp://0.0.0.0:4562' start 
}
stop_node() {
    local idx=$1
    /dev/shm/galera$idx/mysql-galera stop
}
conn_node() {
    local idx=$1
    mysql --sock=/dev/shm/galera$idx/mysql/var/mysqld.sock -u root -prootpass
}
log_node() {
    local idx=$1
    less /dev/shm/galera$idx/mysql/var/mysqld.err
}
start_nodes() {
    cd ~/repo/galera-yan && ./tests/scripts/command.sh start && cd -
}
stop_nodes() {
    cd ~/repo/galera-yan && ./tests/scripts/command.sh stop && cd -
}
remove_nodes() {
    cd ~/repo/galera-yan && ./tests/scripts/command.sh remove && cd -
}
mysql_stopd() {
    sudo /etc/init.d/mysql stop
}
build5.5d() {
    cd ~/repo/galera-yan && MYSQL_SRC=$HOME/repo/wsrep-5.5 ./scripts/mysql/build.sh -i -b -d --no-strip && cd -
}
build5.6d() {
    cd ~/repo/galera-yan && MYSQL_SRC=$HOME/repo/wsrep-5.6 ./scripts/mysql/build.sh -i -b -d --no-strip && cd -
}
build5.5r() {
    cd ~/repo/galera-yan && MYSQL_SRC=$HOME/repo/wsrep-5.5 ./scripts/mysql/build.sh -i -b --no-strip && cd -
}
build5.6r() {
    cd ~/repo/galera-yan && MYSQL_SRC=$HOME/repo/wsrep-5.6 ./scripts/mysql/build.sh -i -b --no-strip && cd -
}
cs5.5() {
    echo "http://bazaar.launchpad.net/~codership/codership-mysql/wsrep-5.5/revision/$1"
}
cs5.6() {
    echo "http://bazaar.launchpad.net/~codership/codership-mysql/5.6/revision/$1"
}

# others
alias dstat='dstat -cdlmnpsy'

pgrep() {
  ps aux | grep $1
}

apt_update() {
    # wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    # sudo apt-add-repository "deb http://dl.google.com/linux/chrome/deb/ stable main"

    # wget -q -O - http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian raring contrib"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian quantal contrib"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian precise contrib"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian oneiric contrib"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian natty contrib"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian maverick contrib non-free"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian lucid contrib non-free"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian karmic contrib non-free"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian hardy contrib non-free"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian wheezy contrib"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian squeeze contrib non-free"
    # sudo apt-add-repository "deb http://download.virtualbox.org/virtualbox/debian lenny contrib non-free"
    # sudo apt-add-repository "deb http://ppa.launchpad.net/tualatrix/ppa/ubuntu precise main"

    sudo apt-add-repository "deb http://archive.canonical.com/ $(lsb_release -sc) partner"
    sudo add-apt-repository ppa:tualatrix/ppa
    sudo add-apt-repository ppa:cassou/emacs
    sudo add-apt-repository ppa:rquillo/ansible
    sudo add-apt-repository ppa:dominik-stadler/subversion-1.8

    sudo apt-get update
}

home_http_server() {
    cd ~ && sudo python -m SimpleHTTPServer 80 && cd -
}

cxx_indent() {
    dos2unix $@
    # http://astyle.sourceforge.net/astyle.html
    
    # 一些不要使用的选项(看上去我们会很想使用)
    # 1.--indent-cases //case后面内容多一次缩进,但是会让case部分{}存在问题.
    # 2.--indent-namespaces //会让namespace下面内容多一个层缩进.
    # 3.--indent-classes //虽然能够让public:,private:产生所缩进,但是造成函数出现两次缩进.
    # 8.--break-blocks 在{}之后断开一行.看上去很好,但是不太合适.
    # 9.--delete-empty-lines 删除函数内不必要空行.看上去很好,但是不太合适.

    # 一些可以使用的选项
    # 1.--suffix=none 不进行任何备份.
    # 2.--style=java 基本风格使用java style.
    # 3.--brackets=attach 括号附着在函数和条件表达式之后.
    # 4.--indent-switches switch里面case进行缩进.
    # 5.--indent-labels label进行缩进.
    # 6.--indent-preprocessor 预处理换行使用缩进.
    # 7.--indent-col1-comments //注释进行缩进.
    # 10.--add-brackets 条件表达语句都加上{}
    # 11.--convert-tabs 转换tabs
    # 12.--lineend=linux 换行转换成为\n
    # 13.--align-pointer=type *和&都偏向类型.
    # 14.--pad-oper 在运算符附近加上空格

    astyle --suffix=none --style=java --indent=spaces=2 --brackets=attach \
        --indent-switches --indent-labels --indent-preprocessor --indent-col1-comments \
        --convert-tabs --verbose --lineend=linux --align-pointer=type --pad-oper $@
}

vpn_umeng_dp() {
    cd ~/.private/vpn-umeng-dp && sudo openvpn --config client.conf && cd -
}

install_files() {
    mkdir -p ~/utils/bin
    for target in uinstall ihosts time-machine
    do
        echo "installing $target..."
        rm -rf ~/utils/bin/$target
        ln -s ~/repo/sperm/files/$target ~/utils/bin/$target
    done
    
    for target in .emacs .shrc .zshrc .bashrc .screenrc .tmux.conf
    do
        echo "installing $target..."
        rm -rf ~/$target
        ln -s ~/repo/sperm/files/$target ~/$target
    done

    ##########
    echo "installing index.html..."
    rm -rf ~/index.html
    ln -s ~/.private/files/index.html ~/index.html
    
    echo "installing id_rsa.pub..."
    rm -rf ~/.ssh/id_rsa.pub
    ln -s ~/.private/keys/id_rsa.pub ~/.ssh/id_rsa.pub
    chmod 0600 ~/.ssh/id_rsa.pub

    echo "installing id_rsa..."
    rm -rf ~/.ssh/id_rsa
    ln -s ~/.private/keys/id_rsa ~/.ssh/id_rsa
    chmod 0600 ~/.ssh/id_rsa

    echo "installing github.pub..."
    rm -rf ~/.ssh/github.pub
    ln -s ~/.private/keys/github.pub ~/.ssh/github.pub
    chmod 0600 ~/.ssh/github.pub

    echo "installing github..."
    rm -rf ~/.ssh/github
    ln -s ~/.private/keys/github ~/.ssh/github
    chmod 0600 ~/.ssh/github

    echo "installing ssh-config..."
    rm -rf ~/.ssh/config
    ln -s ~/.private/files/ssh-config ~/.ssh/config

    echo "installing ivy2-credentials..."
    mkdir -p ~/.ivy2
    rm -rf ~/.ivy2/.credentials
    ln -s ~/.private/files/ivy2-credentials ~/.ivy2/.credentials

    echo "installing mvn-settings.xml..."
    mkdir -p ~/.m2
    rm -rf ~/.m2/settings.xml
    ln -s ~/.private/files/mvn-settings.xml ~/.m2/settings.xml

    echo "installing build.sbt..."
    mkdir -p ~/.sbt/plugins
    rm -rf ~/.sbt/plugins/build.sbt
    rm -rf ~/.sbt/build.sbt
    ln -s ~/.private/files/plugins.sbt ~/.sbt/plugins/build.sbt
    ln -s ~/.private/files/build.sbt ~/.sbt/build.sbt

    echo "installing .oh-my-zsh"
    rm -rf ~/.oh-my-zsh
    ln -s ~/.private/oh-my-zsh ~/.oh-my-zsh

    echo "installing .emacs.d"
    rm -rf ~/.emacs.d
    ln -s ~/.private/emacs.d ~/.emacs.d
}

install_hosts() {
    echo "installing hosts..."
    sudo cp ~/.private/files/hosts /etc/hosts
}

shadowsocks() {
    cd ~/.private/shadowsocks && ./local.py && cd -
}

