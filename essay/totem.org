* totem
   - The Totem Single-Ring Ordering and Membership Protocol http://www.cs.jhu.edu/~yairamir/tocs.ps

** ABSTRACT
   - The Totem single-ring protocol supports consistent concurrent operations by placing a total order on broadcast messages. This total order is derived from the sequence number in a token that circulates around a logical ring imposed on a set of processors in a broadcast domain.（能够给所有广播的消息定义全局处理顺序。这个顺序定义是通过让一个token在一个逻辑ring上面不断循环传递得到的）
   - The protocol handles reconfiguration of the system when processors fail and restart or the network partitions and remerges. Extended virtual synchrony ensures that processors deliver messages and configuration changes to the application in a consistent total order system-wide.（能够处理处理单元失败和重启，或者是网络切分和合并，带来的系统重新配置。evs确保处理单元传递消息以及配置变化给上层应用的顺序都是全局一致的）
   - An effective flow control mechanism enables the Totem single-ring protocol to achieve message ordering rates significantly higher than the best prior total ordering protocols.（flow control可以提高消息排序的效率）

** INTRODUCTION
file:./images/totem-srp-hierarchy.png

   - Using a logical token-passing ring imposed on the physical broadcast domain, the single-ring protocol provides reliable totally ordered messsage delivery and effective flow control.
   - On detection of token loss, or on receiv-ing a message from a processor not on its ring, a processor invokes the membership protocol to form a new ring using Join messages and a Commit token transmit-ted over the broadcast domain.（如果检测到token丢失，或者收到某个不在ring上的处理单元请求，就会启动membership协议，通过使用JoinMessage和Commit token，来形成新的ring）
   - The membership protocol activates the recovery protocol with the proposed configuration change. The recovery protocol uses the single-ring ordering protocol to recover missing messages. The processor then in-stalls the new ring, by delivering Configuration Change messages to the application.（之后membership协议启动recovery协议来处理当前配置变化，恢复丢失的消息。完成之后处理单元安装新的ring，并且通知配置变化给上层应用）

The Totem protocol cannot guarantee that every processor is able to deliver every message but it does guarantee that, if two processors deliver a message, they deliver the message in the same total order. The application programs may also need to know about configuration changes. Different processors may learn of a configuration change at different times, but they must form consistent views of the configuration change and of the messages that precede or follow the configuration change.（不能保证每一个处理单元都可以deliver每条message，但是可以保证如果两个处理单元deliver相同messages的话，那么deliver的顺序是一致的。并且配置变化也应该类似message，在deliver方面保证和其他message一样全局有序）

** RELATED WORK
** THE MODEL
We consider a distributed system built on a broadcast domain consisting of a finite number of processors that communicate by broadcasting messages. We use the term originate to refer to the first broadcast of a message generated by the application. Each broadcast of a message is received immediately or not at all by a processor in the broadcast domain and, thus, messages may have to be retransmited to achieve reliable delivery. A processor receives all of its own broadcast messages.（有限的处理单元之间通过广播消息进行通信。广播消息会通过重传来保证可靠性）

The broadcast domain may become partitioned so that processors in one com-ponent of the partitioned system are unable to communicate with processors in another component. Communication between separated components can subse-quently be reestablished.（广播域可能会被切分而不能够通信，对于这个问题广播层会自动建立连接，而不需要上层管理。也就是说上层只需要管理广播消息包括重传消息，但是不用管理连接问题）

Each processor within the system has a unique identifier and stable storage. Processors can incur fail stop, timing, or omission faults. A processor that is excessively slow, or that fails to receive a message an excessive number of times, can be regarded as having failed. Failed processors can be repaired, and are reconfigured into the system when they restart. If a processor fails and restarts, its identifier does not change and all or part of its state may have been retained in stable storage.（每个处理单元会被分配到唯一标识符，并且一旦这个标识符被分配的话就会记录在可靠存储上，失败和重启都会改变这个标识符。如果一个处理单元处理速度过慢的话也可以认为是失败节点）

Imposed on the broadcast domain is a logical token-passing ring. The token is a special message transmitted point-to-point. The token may be lost by not being received by a processor on the ring. Each ring has a representative, chosen deterministically from the membership when the ring is formed, and an identifier that consists of a ring sequence number and the identifier of the representative. To ensure that ring sequence numbers and hence ring identifiers are unique, each processor records its ring sequence number in stable storage.（在广播域上建立令牌环。令牌是点对点之间传输的特殊消息，在传输过程中可能会丢失。每个ring都有一个代表，这个代表是从membership中选举出来的。每个ring的标识符由代表标识符以及一个sequence number组成，并且会被ring中所有的处理单元记录在可靠存储上）

We use the term ring to refer to the infrastructure of Totem, and the term configuration to represent the view provided to the application. The membership of a configuration is a set of processor identifiers. The minimum configuration for a processor consists of the processor itself. A regular configuration has the same membership and identifier as its corresponding ring. A transitional configuration consists of processors that are members of a new ring coming directly from the same old ring. it has an identifier that consists of a "ring" sequence number and the identifier of the representative.（配置表示提供给应用层的视图。transitional配置是指两次regular配置变化之间的临时状态）

-----
TODO

We distinguish between the terms "receive" and "deliver," as follows. A processor receives messages that were broadcast by processors in the broadcast domain, and a processor delivers messages in total order to the application.

Two types of messages are delivered to the application. Regular messages are generated by the application for delivery to the application. Configuration Change messages are generated by the processors for delivery to the application, without being broadcast, to terminate one configuration and to initiate another. The iden-tifiers of the regular and Configuration Change messages consist of configuration identifiers and message sequence numbers.

** SERVICES
The objective of the Totem single-ring protocol is to provide the application with reliable totally ordered message delivery and membership services, as defined below.

*** Membership Services
todo(dirlt)

The Totem membership protocol provides the following properties:
   - Uniqueness of Configurations. Each configuration identifier is unique; more-over, at any time a processor is a member of at most one configuration.
   - Consensus. All of the processors that install a configuration determine that the members of the configuration have reached consensus on the membership.
   - Termination. If a configuration ceases to exist for any reason, such as processor failure or network partitioning, then every processor of that configuration either installs a new configuration by delivering a Configuration Change message or fails before doing so. The Configuration Change message contains the identifier of the configuration it terminates, the identifier of the configuration it initiates, and the membership of the configuration it initiates.
   - Configuration Change Consistency. If processors p and q install configuration C2 directly after C1 , then p and q both deliver the same configuration Change message to terminate C1 and initiate C2.

*** Reliable Ordered Delivery Services
todo(dirlt)

** THE TOTAL ORDERING PROTOCOL
Imposed on the broadcast domain is a logical token-passing ring. The token controls access to the ring; only the processor in possession of the token can broadcast a message. A processor can broadcast more than one message for each visit of the token, subject to the constraints imposed by the flow control mechanisms. When no processor has a message to broadcast, the token continues to circulate. Each processor has a set of input buffers in which it stores incoming messages. The flow control mechanisms avoid over flow of these input buffers.

Each message header contains a sequence number derived from a field of the token; thus, there is a single sequence of message sequence numbers for all processors on the ring. Delivery of messages in sequence number order is agreed delivery. Safe delivery uses an additional field of the token, the 'aru' field, to determine when all processors on the ring have received a message.（agreed delivery可以很容易达到，但是如果要到达safe delivery需要增加aru字段，确保所有处理单元都接受到了这个消息之前的所有消息）

We now describe the Totem single-ring ordering protocol with the assumptions that the token is never lost, that processor failures do not occur, and that the network does not become partitioned; however, messages may be lost. （这里不考虑token丢失，处理单元失败，网络划分等情况）

note(dirlt):论文里面描述算法还是比较清楚的

** THE MEMBERSHIP PROTOCOL
The objective of the membership protocol is to ensure consensus, in that ev-ery member of the configuration agrees on the membership of the configuration, and termination, in that every processor installs some configuration with an agreed membership within a bounded time unless it fails within that time. The member-ship protocol also generates a new token and recovers messages that had not been received by some of the processors when the failure occurred.

** THE RECOVERY PROTOCOL
** THE FLOW CONTROL MECHANISM
